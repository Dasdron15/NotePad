import tkinter as tk
from tkinter import messagebox, filedialog, INSERT
from ctypes import windll
import os


# Functions

def file_save():
    text = window_base.get(1.0, "end-1c")
    file = filedialog.asksaveasfilename(initialdir="Documents", title="Save file",
                                        filetypes=(("Text files", "*.txt"), ("All files", "*.*")))
    if file:
        with open(file, "w") as f:
            f.write(text)


def open_file():
    global window_base
    file_path = filedialog.askopenfilename(initialdir="Documents", title="Open file",
                                           filetypes=(("Text files", "*.txt"), ("All files", "*.*")))
    with open(file_path, 'r') as file:
        counter = 0
        text = file.read().replace('\n', '')
        window_base.insert(INSERT, text, text.rstrip("\n"))
        file_name = os.path.basename(file_path)
        title = f"{file_name} - Notepad"
        root.title(title)


def on_closing():
    text = window_base.get(1.0, "end-1c")
    if text == "":
        root.destroy()
    else:
        if_save = messagebox.askquestion("Save", "Do you want to save this file?")
        if if_save == "yes":
            file_save()
            root.destroy()
        elif if_save == "no":
            root.destroy()


def delete_text():
    text = window_base.get(1.0, "end-1c")
    if text == "":
        pass
    else:
        if_save = messagebox.askquestion("Save", "Do you want to save this file?")
        if if_save == "yes":
            file_save()
            window_base.delete(1.0, "end")
        elif if_save == "no":
            window_base.delete(1.0, "end")


# Window settings

title = "Notepad"
root = tk.Tk()
root.geometry("700x500")
root.title(title)
windll.shcore.SetProcessDpiAwareness(1)

# Area where you type your text

window_base = tk.Text(root, height=300, width=500, bg="white", font=(27))
window_base.pack()

# Create menubar

menubar = tk.Menu()
# Menu Bar settings

file = tk.Menu(menubar, tearoff=0)
menubar.add_cascade(label="File", menu=file)
file.add_command(label="New file", command=delete_text)
file.add_command(label="Open...", command=open_file)
file.add_command(label="Save as...", command=file_save)
file.add_separator()
file.add_command(label="Quit", command=root.destroy)

# Detecting when the window is closed

root.protocol("WM_DELETE_WINDOW", on_closing)

root.config(menu=menubar)
root.mainloop()
